{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","searchTerm","handleSearchTermChange","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Person","person","deletePerson","name","number","onClick","Persons","persons","removePerson","filter","toLowerCase","includes","map","key","id","Notification","message","notificationStatus","className","baseUrl","axios","get","then","response","data","newObject","post","delete","put","App","useState","setPersons","setNewName","setNewNumber","setSearchTerm","notificationMessage","setNotificationMessage","setNotificationStatus","useEffect","personService","initialPersons","event","target","preventDefault","personObject","some","existing","window","confirm","changedPerson","find","n","returnedPerson","catch","error","setTimeout","concat","console","log","personToRemove","ReactDOM","render","document","getElementById"],"mappings":"uOAUeA,EARA,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,uBAC1B,OACI,kDACsB,2BAAOC,MAAOF,EAAYG,SAAUF,MCenDG,EAlBI,SAAC,GAA6E,IAA3EC,EAA0E,EAA1EA,UAAWC,EAA+D,EAA/DA,QAASC,EAAsD,EAAtDA,iBAAkBC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,mBACnE,OACI,6BACI,0BAAMC,SAAUL,GACZ,sCACU,2BAAOH,MAAOI,EAASH,SAAUI,KAE3C,wCACY,2BAAOL,MAAOM,EAAWL,SAAUM,KAE/C,6BACI,4BAAQE,KAAK,UAAb,WCHLC,EARA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACtB,OACI,6BACKD,EAAOE,KADZ,IACmBF,EAAOG,OAD1B,IACkC,4BAAQC,QAASH,GAAjB,YCiB3BI,EAnBC,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,QAASnB,EAA+B,EAA/BA,WAAYoB,EAAmB,EAAnBA,aAYpC,OACI,6BAXwBD,EAAQE,QAAO,SAAAR,GAAM,OAAIA,EAAOE,KAAKO,cAAcC,SAASvB,EAAWsB,kBAEhEE,KAAI,SAAAX,GAAM,OACzC,kBAAC,EAAD,CACIY,IAAKZ,EAAOa,GACZb,OAAQA,EACRC,aAAc,kBAAMM,EAAaP,WCG9Bc,EAZM,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,mBAC7B,OAAgB,OAAZD,EACO,KAIP,yBAAKE,UAAWD,GACXD,I,gBCPPG,EAAU,eAqBD,EAnBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAiB9B,EAdA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAY9B,EATA,SAACV,GACZ,OAAOM,IAAMO,OAAN,UAAgBR,EAAhB,YAA2BL,KAQvB,EALA,SAACA,EAAIW,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBL,GAAMW,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,8NCb7C,IAgJeK,EAhJH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACPvB,EADO,KACEwB,EADF,OAEgBD,mBAAS,IAFzB,mBAEPpC,EAFO,KAEEsC,EAFF,OAGoBF,mBAAS,IAH7B,mBAGPlC,EAHO,KAGIqC,EAHJ,OAIsBH,mBAAS,IAJ/B,mBAIP1C,EAJO,KAIK8C,EAJL,OAKwCJ,mBAAS,MALjD,mBAKPK,EALO,KAKcC,EALd,OAMsCN,mBAAS,MAN/C,mBAMPb,EANO,KAMaoB,EANb,KAQdC,qBAAU,WACNC,IAEKjB,MAAK,SAAAkB,GACFT,EAAWS,QAEpB,IAoHH,OACI,6BACI,yCACA,kBAAC,EAAD,CAAcxB,QAASmB,EAAqBlB,mBAAoBA,IAChE,kBAAC,EAAD,CAAQ7B,WAAYA,EAAYC,uBA9GT,SAACoD,GAC5BP,EAAcO,EAAMC,OAAOpD,UA8GvB,yCACA,kBAAC,EAAD,CAAYG,UA5GF,SAACgD,GACfA,EAAME,iBACN,IAAMC,EAAe,CACjBzC,KAAMT,EACNU,OAAQR,GAEZ,GAAIW,EAAQsC,MAAK,SAAAC,GAAQ,OAAIA,EAAS3C,OAASyC,EAAazC,SACxD,GAAI4C,OAAOC,QAAP,UAAkBJ,EAAazC,KAA/B,2EAA8G,CAC9G,IACM8C,E,yVAAa,IADJ1C,EAAQ2C,MAAK,SAAAC,GAAC,OAAIA,EAAEhD,OAASyC,EAAazC,QACtC,CAAgBC,OAAQR,IAE3C2C,EACYU,EAAcnC,GAAImC,GACzB3B,MAAK,SAAA8B,GACFrB,EAAWxB,EAAQK,KAAI,SAAAX,GAAM,OAAIA,EAAOa,KAAOmC,EAAcnC,GAAKb,EAASmD,SAE9EC,OAAM,SAAAC,GACHtB,EAAW,IACXC,EAAa,IACbI,EAAsB,SACtBD,EAAuB,kBAAD,OACAa,EAAc9C,KADd,0CAGtBoD,YAAW,WACPnB,EAAuB,MACvBC,EAAsB,QACvB,KACHN,EAAWxB,EAAQE,QAAO,SAAA0C,GAAC,OAAIA,EAAErC,KAAOmC,EAAcnC,UAG9DkB,EAAW,IACXC,EAAa,IACbI,EAAsB,WACtBD,EAAuB,sBAAD,OACIa,EAAc9C,OAExCoD,YAAW,WACPnB,EAAuB,MACvBC,EAAsB,QACvB,WAIPE,EACYK,GACPtB,MAAK,SAAA8B,GACFrB,EAAWxB,EAAQiD,OAAOJ,IAC1BpB,EAAW,IACXC,EAAa,IACbI,EAAsB,WACtBD,EAAuB,SAAD,OAAUQ,EAAazC,OAC7CoD,YAAW,WACPnB,EAAuB,MACvBC,EAAsB,QACvB,QACJgB,OAAM,SAAAC,GACLtB,EAAW,IACXC,EAAa,IACbI,EAAsB,SACtBD,EAAuB,GAAD,OAAIkB,EAAM/B,SAASC,KAAK8B,QAC9CC,YAAW,WACPnB,EAAuB,MACvBC,EAAsB,QACvB,KACHoB,QAAQC,IAAIJ,EAAM/B,SAASC,UA4CD9B,QAASA,EAASC,iBAxHnC,SAAC8C,GACtBT,EAAWS,EAAMC,OAAOpD,QAuHoEM,UAAWA,EAAWC,mBApH3F,SAAC4C,GACxBR,EAAaQ,EAAMC,OAAOpD,UAoHtB,uCACA,kBAAC,EAAD,CAASiB,QAASA,EAASnB,WAAYA,EAAYoB,aAxCtC,SAACmD,GACdZ,OAAOC,QAAP,iBAAyBW,EAAexD,KAAxC,SACAoC,EACYoB,EAAe7C,IACtBQ,KACGS,EAAWxB,EAAQE,QAAO,SAAAR,GAAM,OAAIA,EAAOa,KAAO6C,EAAe7C,QAEpEuC,OAAM,SAAAC,GACHtB,EAAW,IACXC,EAAa,IACbI,EAAsB,SACtBD,EAAuB,kBAAD,OACAuB,EAAexD,KADf,0CAGtBoD,YAAW,WACPnB,EAAuB,MACvBC,EAAsB,QACvB,KACHN,EAAWxB,EAAQE,QAAO,SAAA0C,GAAC,OAAIA,EAAErC,KAAO6C,EAAe7C,UAG/DuB,EAAsB,WACtBD,EAAuB,WAAD,OACPuB,EAAexD,OAE9BoD,YAAW,WACPnB,EAAuB,MACvBC,EAAsB,QACvB,W,MChIfuB,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.b476a083.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ searchTerm, handleSearchTermChange }) => {\n    return (\n        <div>\n            filter shown with <input value={searchTerm} onChange={handleSearchTermChange} />\n        </div>\n    )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, handleNameChange, newNumber, handleNumberChange }) => {\n    return (\n        <div>\n            <form onSubmit={addPerson}>\n                <div>\n                    name: <input value={newName} onChange={handleNameChange} />\n                </div>\n                <div>\n                    number: <input value={newNumber} onChange={handleNumberChange} />\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Person = ({ person, deletePerson }) => {\n    return (\n        <div>\n            {person.name} {person.number} <button onClick={deletePerson}>delete</button>\n        </div>\n    )\n}\n\nexport default Person\n","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ persons, searchTerm, removePerson }) => {\n\n    const personsToShow = () => persons.filter(person => person.name.toLowerCase().includes(searchTerm.toLowerCase()))\n\n    const rows = () => personsToShow().map(person =>\n        <Person\n            key={person.id}\n            person={person}\n            deletePerson={() => removePerson(person)}\n        />\n    )\n\n    return (\n        <div>\n            {rows()}\n        </div>\n    )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst Notification = ({ message, notificationStatus }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={notificationStatus}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification\n","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [searchTerm, setSearchTerm] = useState('')\n    const [notificationMessage, setNotificationMessage] = useState(null)\n    const [notificationStatus, setNotificationStatus] = useState(null)\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleSearchTermChange = (event) => {\n        setSearchTerm(event.target.value)\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const personObject = {\n            name: newName,\n            number: newNumber\n        }\n        if (persons.some(existing => existing.name === personObject.name)) {\n            if (window.confirm(`${personObject.name} is already added to phonebook, replace the old number with a new one?`)) {\n                const person = persons.find(n => n.name === personObject.name)\n                const changedPerson = { ...person, number: newNumber }\n\n                personService\n                    .update(changedPerson.id, changedPerson)\n                    .then(returnedPerson => {\n                        setPersons(persons.map(person => person.id !== changedPerson.id ? person : returnedPerson))\n                    })\n                    .catch(error => {\n                        setNewName('')\n                        setNewNumber('')\n                        setNotificationStatus('error')\n                        setNotificationMessage(\n                            `Information of ${changedPerson.name} has already been removed from server`\n                        )\n                        setTimeout(() => {\n                            setNotificationMessage(null)\n                            setNotificationStatus(null)\n                        }, 5000)\n                        setPersons(persons.filter(n => n.id !== changedPerson.id))\n                    })\n\n                setNewName('')\n                setNewNumber('')\n                setNotificationStatus('success')\n                setNotificationMessage(\n                    `Updated number for ${changedPerson.name}`\n                )\n                setTimeout(() => {\n                    setNotificationMessage(null)\n                    setNotificationStatus(null)\n                }, 5000)\n            }\n        }\n        else {\n            personService\n                .create(personObject)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                    setNewName('')\n                    setNewNumber('')\n                    setNotificationStatus('success')\n                    setNotificationMessage(`Added ${personObject.name}`)\n                    setTimeout(() => {\n                        setNotificationMessage(null)\n                        setNotificationStatus(null)\n                    }, 5000)\n                }).catch(error => {\n                    setNewName('')\n                    setNewNumber('')\n                    setNotificationStatus('error')\n                    setNotificationMessage(`${error.response.data.error}`)\n                    setTimeout(() => {\n                        setNotificationMessage(null)\n                        setNotificationStatus(null)\n                    }, 5000)\n                    console.log(error.response.data)\n                })\n\n        }\n    }\n\n    const removePerson = (personToRemove) => {\n        if (window.confirm(`Delete ${personToRemove.name} ?`)) {\n            personService\n                .remove(personToRemove.id)\n                .then(\n                    setPersons(persons.filter(person => person.id !== personToRemove.id))\n                )\n                .catch(error => {\n                    setNewName('')\n                    setNewNumber('')\n                    setNotificationStatus('error')\n                    setNotificationMessage(\n                        `Information of ${personToRemove.name} has already been removed from server`\n                    )\n                    setTimeout(() => {\n                        setNotificationMessage(null)\n                        setNotificationStatus(null)\n                    }, 5000)\n                    setPersons(persons.filter(n => n.id !== personToRemove.id))\n                })\n\n            setNotificationStatus('success')\n            setNotificationMessage(\n                `Deleted ${personToRemove.name}`\n            )\n            setTimeout(() => {\n                setNotificationMessage(null)\n                setNotificationStatus(null)\n            }, 5000)\n        }\n    }\n\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <Notification message={notificationMessage} notificationStatus={notificationStatus} />\n            <Filter searchTerm={searchTerm} handleSearchTermChange={handleSearchTermChange} />\n            <h2>add a new</h2>\n            <PersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n            <h2>Numbers</h2>\n            <Persons persons={persons} searchTerm={searchTerm} removePerson={removePerson} />\n        </div>\n    )\n\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}